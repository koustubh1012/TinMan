##############################################################################
#
# GitHub CI workflow for Ubuntu 22.04 and ROS2 Humble
#
##############################################################################

name: Build

on:
  # Triggered whenever push to the main branch
  push:
    branches: [ "main" ]

  # Triggered whenever a pull request is created on main
  pull_request:
    branches: [ "mian" ]
    types: [opened]

  # Allow manual trigger
  workflow_dispatch:

jobs:
  build:
    # Use the latest Ubuntu 22.04
    runs-on: ubuntu-22.04
    
    steps:
      # Step 1: Checkout the repository
      - name: Checking out
        uses: actions/checkout@v3

      # Step 2: Set up dependencies and tools
      - name: Git install and colcon extensions
        run: |
          sudo apt-get update && sudo apt-get install -y git locales
          sudo locale-gen en_US en_US.UTF-8
          sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
          export LANG=en_US.UTF-8
          locale
          sudo apt install software-properties-common
          sudo add-apt-repository universe
          sudo apt-get update && sudo apt-get install -y curl lcov

      # Step 3: Install ROS2 Humble
      - name: Install ROS2 Humble
        run: |
          sudo apt-get update
          sudo apt-get install -y software-properties-common
          sudo add-apt-repository universe
          sudo apt-get update
          sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null
          sudo apt-get update
          sudo apt-get install -y ros-humble-desktop python3-colcon-common-extensions python3-argcomplete

      # Step 4: Install additional ROS2 dependencies
      - name: Install Additional ROS2 Dependencies
        run: |
          sudo apt-get install -y ros-humble-cv-bridge ros-humble-vision-opencv ros-humble-gazebo-ros-pkgs

      # Step 5: Initialize rosdep and resolve dependencies
      - name: ROS Dependency Management
        run: |
          sudo rosdep init
          rosdep update
          rosdep install --from-paths src -y --ignore-src

      # Step 6: Build the package with coverage enabled
      - name: Configure CMake flags and build executables
        run: |
          source /opt/ros/humble/setup.bash
          colcon build --cmake-args -DCOVERAGE=1 --packages-select tinman
          cat log/latest_build/tinman/stdout_stderr.log
          find build/tinman/ | grep -E 'gcno' # Check for .gcno files
      
      # Step 7: Run unit tests and check code
      - name: Run Unit Tests and Code Checks
        run: |
          source /opt/ros/humble/setup.bash
          colcon test --packages-select tinman
          cat log/latest_test/tinman/stdout_stderr.log
          find build/tinman/ | grep -E 'gcda' # Check for .gcda files
          colcon test-result --test-result-base build/tinman/ # Check test results
      
      # Step 8: Generate coverage report
      - name: Generate Coverage Report
        run: |
          source install/setup.bash
          lcov --capture --directory build/tinman --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/test/*' --output-file coverage_cleaned.info
          genhtml coverage_cleaned.info --output-directory coverage_report

      # Step 9: Upload coverage results to CodeCov
      - name: Upload Coverage to CodeCov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # Not required for public repositories
          files: coverage_cleaned.info
          fail_ci_if_error: true
          verbose: true
